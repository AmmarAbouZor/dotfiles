(defcfg
  linux-dev /dev/input/by-path/platform-i8042-serio-0-event-kbd
;; This is for LogiTech ergo keyboard
;;  linux-dev /dev/input/by-path/platform-i8042-serio-0-event-kbd:/dev/input/by-id/usb-Logitech_USB_Receiver-if02-event-mouse
  process-unmapped-keys yes
  ;; TODO AAZ: Make sure this improve anything here. Default is 5.
  rapid-event-delay 0
)

(defsrc
       1    2    3    4    5    6    7    8    9    0    -     =
       q    w    e    r    t    y    u    i    o    p    [     ] 
  caps a    s    d    f    g    h    j    k    l    ;    '
  lsft  z    x    c    v    b    n    m    ,    .    /
                                spc
)

(defvar
  tap-time 0
  hold-time 220
  hold-time-fast 180

  left-hand-keys (
    q w e r t
    a s d f g
    z x c v b
  )
  right-hand-keys (
    y u i o p
    h j k l ;
    n m , . /
  )

  left-hand-keys-nhm (
    q w e r t
            g
    z x c v b
  )
  right-hand-keys-nhm (
    y u i o p
    h        
    n m , . /
  )
)

(deflayer base
       1    2    3    4    5    6    7    8    9    0    -     =
       @q    w    e    r    t    y    u    i    o    p    [     ]
  @caps @a  @s   @d   @f    g    h   @j   @k   @l   @;    '
  @lsft  z    x    c    v    b    n    m    ,    .    /
                               @spc
)

(deflayer nav-symb
       f1   f2   f3   f4   f5   f6   f7   f8   f9   f10  f11   f12
      S-`  S-2   S-3  S-4  S-5  S-6  S-7  S-8  S-9  S-0    S-[    S-]
  spc S-1   -   @s-plus  @c-eql  S--  left  down  up  rght   S-\  ` 
   _     _    _    tab    _    cmps    bspc   ret   S-,   S-.    \ 
                                spc
)

(deflayer nums
       f1   f2   f3   f4   f5   f6   f7   f8   f9   f10  f11   f12   
        _    _    _    _   _  _  7   8   9    _     _     _    
   spc    _    _    _    _    _  0   4   5   6   _  _ 
   _     _    _    _    _    _  0   1   2   3    _   
                              0             
)

(deflayer nomods
       1    2    3    4    5    6    7    8    9    0    -     =
       q    w    e    r    t    y    u    i    o    p    [     ]
  esc a    s     d   @f    g    h    j    k    l    ;    '   
  lsft  z    x    c    v    b    n    m    ,    .    / 
                                @spc 
)
(deffakekeys
  to-base (layer-switch base)
)
(defalias
  tap (multi
    (layer-switch nomods)
    (on-idle-fakekey to-base tap 1)
  )

  ;; Home row mods
  a (tap-hold-release-keys $tap-time $hold-time (multi a @tap) lalt $left-hand-keys-nhm)
  s (tap-hold-release-keys $tap-time $hold-time (multi s @tap) lmet $left-hand-keys-nhm)
  d (chord combo d)
  f (chord combo f)
  j (tap-hold-release-keys $tap-time $hold-time-fast (multi j @tap) rctl $right-hand-keys-nhm)
  k (chord combo k)
  l (chord combo l)
  ; (tap-hold-release-keys $tap-time $hold-time (multi ; @tap) ralt $right-hand-keys-nhm)

  q (tap-hold-release-keys $tap-time $hold-time (multi q @tap) (multi lalt lsft) $left-hand-keys-nhm)

  spc (tap-hold-release $tap-time $hold-time (multi spc @tap) (layer-toggle nav-symb))
  caps (tap-hold-release $tap-time $hold-time (multi esc @tap) (layer-toggle nums))
  lsft (tap-hold-release $tap-time $hold-time (multi (caps-word 2000) @tap) lsft)

  ;; Home row mods on nav-symb layer
  s-plus (tap-hold-release $tap-time $hold-time-fast (multi (multi lsft =) @tap) lsft)
  c-eql (tap-hold-release $tap-time $hold-time-fast (multi = @tap) lctl)
)

;; Combos
(defchords combo 30
  (d) (tap-hold-release-keys $tap-time $hold-time-fast (multi d @tap) lsft $left-hand-keys-nhm)
  (f) (tap-hold-release-keys $tap-time $hold-time-fast (multi f @tap) lctl $left-hand-keys-nhm)
  (k) (tap-hold-release-keys $tap-time $hold-time-fast (multi k @tap) rsft $right-hand-keys-nhm)
  (l) (tap-hold-release-keys $tap-time $hold-time (multi l @tap) rmet $right-hand-keys-nhm)

  (d f) esc
  (k l) tab

  ;; Trying to find solve the problem with f+j
  ;; (j) (tap-hold-release-keys $tap-time $hold-time-fast (multi j @tap) rctl $right-hand-keys-nhm)
  ;; (j k) ret

  ;; This caused a lot of problems.
  ;; (d f) (tap-hold-release $tap-time $hold-time (multi esc @tap) (multi lsft lctl))
  ;; (j k) (tap-hold-release $tap-time $hold-time (multi ret @tap) (multi rsft rctl))
  ;; (k l) (tap-hold-release $tap-time $hold-time (multi tab @tap) (multi rsft rmet))
)


#|
(deflayer layers
  _    _    _    _    _    _    _    _    _    _    _    _    _          _    _    _
  _    _    _    _    _    _    _    _    _    _    _    _    _    _     _    _    _     _    _    _    _
  _    _    _    _    _    _    _    _    _    _    _    _    _    _     _    _    _     _    _    _    _
  _    _    _    _    _    _    _    _    _    _    _    _    _                          _    _    _
  _    _    _    _    _    _    _    _    _    _    _    _                    _          _    _    _    _
  _    _    _              _              _    _    _    _               _    _    _     _    _
)
|#

